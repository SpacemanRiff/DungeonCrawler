<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-40</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spawners[0,0] = 0
spawners[0,1] = 0

numberOfSpawners = 0

spawnRate = 150
spawnDelay = spawnRate
maxNumberOfGhosts = 5
currentSpawner = 0

surf = surface_create(room_width, room_height)
surfScale = 1/8

lightingOn = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* player control code */
if(!player.dying){
    if(keyboard_check_pressed(vk_up)){
        player.moveUp = true
        player.moveDown = false
    }
    if(keyboard_check_pressed(vk_down)){
        player.moveDown = true
        player.moveUp = false
    }
    if(keyboard_check_pressed(vk_left)){
        player.moveLeft = true
        player.moveRight = false
    }
    if(keyboard_check_pressed(vk_right)){
        player.moveRight = true
        player.moveLeft = false
    }
    
    if(keyboard_check_pressed(ord('L'))){
        lightingOn += 1
    }
    
    if(keyboard_check_released(vk_up)){
        player.moveUp = false
    }
    if(keyboard_check_released(vk_down)){
        player.moveDown = false
    }
    if(keyboard_check_released(vk_left)){
        player.moveLeft = false
    }
    if(keyboard_check_released(vk_right)){
        player.moveRight = false
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(spawnDelay &lt;= 0){
    if(instance_number(ghost) &lt; 5){
        instance_create(spawners[currentSpawner,0], spawners[currentSpawner,1], ghost)
        spawnDelay = spawnRate
        if(currentSpawner+1 &lt; numberOfSpawners){
            currentSpawner++
        }else{
            currentSpawner = 0
        }
    
    }
}
spawnDelay--
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(coin) &amp;&amp; !instance_exists(superCoin)) {
    if(audio_is_playing(powerUpSound)){
        audio_stop_sound(powerUpSound)
    }
    if (room != room_last){
        audio_play_sound(levelCompleteSound,1,false)
        room_goto_next()
    }else{
        audio_play_sound(gameCompleteSound,1,false)
        show_message("u got gud")
        game_end()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(lightingOn%2 == 1){
    surface_set_target(surf)
    
    draw_clear(c_black)
    
    with(light){
        draw_set_blend_mode(bm_src_color)
        draw_sprite_ext(lightSprite, 0, x*other.surfScale, y*other.surfScale, lightSize*other.surfScale, lightSize*other.surfScale, 0, c_white, lightStrength)
        draw_set_blend_mode(bm_normal)
    }
    
    surface_reset_target()
    draw_surface_ext(surf, 0, 0, 1/surfScale, 1/surfScale, 0, c_white, 0.75)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
